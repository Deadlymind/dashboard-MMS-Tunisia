# backend/exploitation/management/commands/seed_objets_sociaux.py
from django.core.management.base import BaseCommand
from exploitation.models import SocialObject

NOMS = [
    "Activités informatiques",
    "Assistance logistique et prestation de service",
    "Commerce de prêt à porter",
    "Commerce de services et accessoires de télécommunication.",
    "Commerce en gros de matériels informatique et de télécommunication.",
    "Commerce en Gros de quincaillerie.",
    "Commerce en Gros d’articles d’emballage en plastique, papiers et cartons.",
    "Commerce en gros tous produits",
    "Commerce et distribution en gros de matériel industriel et agricole",
    "Commerce tout produits industriel et agricole en detail",
    "Conseil pour les affaires et autres conseils de gestion",
    "Consultant",
    "Consulting Marketing et Commercial",
    "Design",
    # (duplicate "Design" removed intentionally)
    "Entreprise de batiment et travaux public",
    "Exploitation d’un salon de thé",
    "Fabrication de structures métalliques et de parties de structures",
    "Journal Electronique",
    "l’assistance et le conseil en matière de gestion des entreprises",
    "l’exploitation d’un conseil informatique",
    "La commercialisation de cycles et motocycles",
    "La distribution en détail de tous produits non homologués",
    "La Fabrication des rideaux",
    "La location bail de machines de distribution d’eaux aromatisées",
    "La prestation de services administratifs combinés de bureau",
    "Le Commerce de gros des tissus de tous genres et de leurs dérivés",
    "Le Commerce et le négoce international.",
    "Optique",
    "Promotion Immobilière",
    "Réparation et maintenance navale",
    "Services Agricoles",
    "Services de transit douanier",
    "Services Funéraires",
    "Tapisserie",
    "Unité Industrielle de fabrication d’appareils médicaux",
    "Vente produits parapharmaceutiques",
    "batata"
]

class Command(BaseCommand):
    help = "Seed catalogue des objets sociaux (idempotent)."

    def handle(self, *args, **options):
        created = 0
        for nom in dict.fromkeys(NOMS):  # dedupe while preserving order
            obj, was_created = SocialObject.objects.get_or_create(nomination=nom)
            created += 1 if was_created else 0
        self.stdout.write(self.style.SUCCESS(f"Catalogue seeded. New entries: {created}"))
